package models

import (
	"database/sql"
	"time"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api"
)

type InitialState struct {
	name           string
	isSendable     bool
	isTimeRequired bool
}

var initialStateInstance *InitialState

func CreateInitialStateInstance() *InitialState {
	if initialStateInstance == nil {
		initialStateInstance = &InitialState{
			"initial",
			false,
			false,
		}
	}
	return initialStateInstance
}

func (initial *InitialState) ResponseOnChangeState() string {
	return "–í—ã –æ–ø–æ–∑–¥–∞–µ—Ç–µ –∏–ª–∏ –≤ –æ—Ñ–∏—Å–µ, –Ω–æ –æ–ø–æ–∑–¥–∞–ª–∏?"
}

func (initial *InitialState) StoreHRDatabase(user User, comment string, arrivalTime sql.NullTime, msg_id string, state string) error {
	return nil
}

func (initial *InitialState) SoftUpdateHRDatabase(msg_id string) error {
	return nil
}

func (initial *InitialState) CheckedAtHRDatabase(chk time.Time, msg_id string) error {
	return nil
}

func (initial *InitialState) GetName() string {
	return initial.name
}

func (initial *InitialState) IsSendable() bool {
	return initial.isSendable
}

func (initial *InitialState) GetReplyButtons() tgbotapi.ReplyKeyboardMarkup {
	return tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üò¨ –û–ø–æ–∑–¥–∞—é")),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üè¢ –í –æ—Ñ–∏—Å–µ, –Ω–æ –æ–ø–æ–∑–¥–∞–ª")),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üëî –ü–æ –¥–µ–ª–∞–º –æ—Ñ–∏—Å–∞")),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üö´ –ù–µ —Å–º–æ–≥—É –ø—Ä–∏–π—Ç–∏")),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üèÉ‚Äç‚ôÇ –ü–æ –ª–∏—á–Ω—ã–º –¥–µ–ª–∞–º")),
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üè† –†–∞–±–æ—Ç–∞—é –∏–∑ –¥–æ–º–∞")),
	)
}

func (initial *InitialState) IsTimeRequired() bool {
	return initial.isTimeRequired
}
